#!/usr/bin/env bash

set -e
set -x

travis_fold start "build"
travis_time_start

# # this script runs as root under docker
# 
# # build and install
# yum install -y rpm-build make yum-utils gcc binutils util-linux-ng which
# yum install -y openssl-devel libuuid-devel libseccomp-devel e2fsprogs
# 
# yum install -y epel-release
# 
# yum install -y sudo git tree
# 
# useradd -u 1000 --create-home -s /bin/bash testuser
# echo "Defaults:testuser env_keep=DOCKER_HOST" >>/etc/sudoers
# echo "testuser ALL=(ALL) NOPASSWD: ALL" >>/etc/sudoers
# chown -R testuser .
# 
# su testuser -c '
#   set -x
#   set -e
# 
#   echo "Hello, world"
#   ls -l
#   git --version
#   gcc --version
#   rpm -qa | sort
# '

. $HOME/.bash_profile


ROLL_TO_BUILD=$(awk '/ROLLNAME/ {print $3}' version.mk)

echo "=-=-=- Build of ${ROLL_TO_BUILD} started at $(date) -=-=-="

mkdir -p /tmp/$(pwd)

tar -cf - . | ( cd /tmp/$(pwd) ; tar -xf - )
cd /tmp/$(pwd)

if [ -f ./bootstrap.sh ] ; then
    grep -q yum ./bootstrap.sh && \
        sed -i 's/sudo yum/yum/g;s/yum/sudo yum -y/g;' ./bootstrap.sh
    chmod +x ./bootstrap.sh
    ./bootstrap.sh
    sudo make clean && \
        sudo rm ${PWD}/_arch
fi

make default

for f in $(find . -name "*.iso") ; do
    echo -e "=-=-=- Roll ISO $f Details =-=-=-\n"
    ls -l $f
    echo ""
    isoinfo -R -f -i $f
done

cd ../

echo "=-=-=- Build of ${ROLL_TO_BUILD} required "\
    $(du -s --block-size=1k ./build | awk '{printf "%'\''d KB\n", $1}')" -=-=-="

cd ./build

for f in $(find . -name "*.iso"); do
    mv -v $f ../
done

echo "=-=-=- Build of ${ROLL_TO_BUILD} finished at $(date) -=-=-="

travis_time_finish
travis_fold end "build"
